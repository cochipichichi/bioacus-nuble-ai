export const AudioMod=(()=>{const o={audioCtx:null,source:null,analyser:null,raf:0,onFrame:null,running:!1,sampleRate:48000,fftSize:2048},n=new Float32Array(1024),a=new Float32Array(2048);async function t(){if(o.running)return;o.audioCtx=new(window.AudioContext||window.webkitAudioContext),o.sampleRate=o.audioCtx.sampleRate;const t=await navigator.mediaDevices.getUserMedia({audio:!0});o.source=o.audioCtx.createMediaStreamSource(t),o.analyser=o.audioCtx.createAnalyser(),o.analyser.fftSize=2048,o.analyser.smoothingTimeConstant=.85,o.source.connect(o.analyser),o.running=!0,e()}function r(){if(o.running=!1,cancelAnimationFrame(o.raf),o.source&&o.source.mediaStream&&o.source.mediaStream.getTracks().forEach((o=>o.stop())),o.audioCtx)o.audioCtx.close()}function e(){o.running&&(o.analyser.getFloatFrequencyData(n),o.analyser.getFloatTimeDomainData(a),o.onFrame&&o.onFrame({freq:n,time:a,fftSize:o.analyser.fftSize,sampleRate:o.sampleRate}),o.raf=requestAnimationFrame(e))}function s(o,n,a){const t=n/2,r=t/o.length,e=new Array(16).fill(0),s=[],l=100,i=8e3;for(let o=0;o<=16;o++){const n=o/16,a=l*Math.pow(i/l,n);s.push(a)}for(let l=0;l<o.length;l++){const n=l*r;if(n<s[0]||n>s[s.length-1])continue;let a=0;for(;a<16&&n>s[a+1];)a++;const t=Math.pow(10,o[l]/10);e[a]+=t}const l=e.map((o=>Math.log10(1e-12+o))),i=l.reduce(((o,n)=>o+n),0)/l.length,c=Math.sqrt(l.map((o=>(o-i)**2)).reduce(((o,n)=>o+n),0)/l.length)||1;return l.map((o=>(o-i)/c))}return{start:t,stop:r,bands16:s,mod:o}})();